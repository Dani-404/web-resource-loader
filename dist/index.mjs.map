{"version":3,"sources":["../src/Resource/Resource.ts","../src/Resource/ResourceList.ts","../src/Resource/ResourceManager.ts","../src/index.ts"],"sourcesContent":["export class Resource {\r\n    key: string;\r\n    data: any;\r\n\r\n    constructor({key, data} : { key: string, data: any}) {\r\n        this.key = key;\r\n        this.data = data;\r\n    }\r\n\r\n    public getData(): any {\r\n        return this.data;\r\n    }\r\n}","export enum ResourceList {\r\n    IMAGE,\r\n    VIDEO,\r\n    FONT,\r\n    AUDIO,\r\n    DIVERSE,\r\n    JS,\r\n    CSS\r\n}","import { Resource } from \"./Resource\";\r\nimport { ResourceList } from \"./ResourceList\";\r\nimport { ResourceType } from \"./Types/ResourceType\";\r\nimport fetch from \"node-fetch\";\r\nimport fetchLocale from \"file-fetch\";\r\n\r\nexport default class ResourceManager extends EventTarget {\r\n    images: Resource[];\r\n    videos: Resource[];\r\n    fonts: Resource[];\r\n    audios: Resource[];\r\n    css: Resource[];\r\n    js: Resource[];\r\n    diverses: Resource[];\r\n    totalResources: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.images = [];\r\n        this.videos = [];\r\n        this.fonts = [];\r\n        this.audios = [];\r\n        this.css = [];\r\n        this.js = [];\r\n        this.diverses = [];\r\n        this.totalResources = 0;\r\n    }\r\n\r\n    public loadResources({ images = [], videos = [], fonts = [], audios = [], diverses = [], css = [], js = [] }: { images?: ResourceType[]; videos?: ResourceType[]; fonts?: ResourceType[]; audios?: ResourceType[]; css?: ResourceType[]; js?: ResourceType[], diverses?: ResourceType[] }): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            this.totalResources = images.length + videos.length + fonts.length + audios.length + diverses.length + css.length + js.length;\r\n\r\n            const listOfPromise = [];\r\n\r\n            for (let i in images) {\r\n                const { key, src } = images[i];\r\n\r\n                const countItems = images.filter((image) => image.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate image key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.IMAGE,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in videos) {\r\n                const { key, src } = videos[i];\r\n\r\n                const countItems = videos.filter((video) => video.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate video key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.VIDEO,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in fonts) {\r\n                const { key, src } = fonts[i];\r\n\r\n                const countItems = fonts.filter((font) => font.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate font key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.FONT,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in audios) {\r\n                const { key, src } = audios[i];\r\n\r\n                const countItems = audios.filter((audio) => audio.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate audio key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.AUDIO,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in diverses) {\r\n                const { key, src } = diverses[i];\r\n\r\n                const countItems = diverses.filter((diverse) => diverse.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate diverse key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.DIVERSE,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in css) {\r\n                const { key, src } = css[i];\r\n\r\n                const countItems = css.filter((cssFile) => cssFile.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate css key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.CSS,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            for (let i in js) {\r\n                const { key, src } = js[i];\r\n\r\n                const countItems = js.filter((jsFile) => jsFile.key.toUpperCase() == key.toUpperCase());\r\n                if (countItems.length > 1)\r\n                    console.warn(`[WARNING] Duplicate js key ${key}`)\r\n\r\n                listOfPromise.push(this.loadResource({\r\n                    type: ResourceList.JS,\r\n                    key,\r\n                    src\r\n                }));\r\n            }\r\n\r\n            this.dispatchEvent(new CustomEvent(\"start\"));\r\n            Promise.all(listOfPromise)\r\n                .then(() => resolve(`[ResourceManager] All resources have been loaded (${images.length} images, ${videos.length} videos, ${fonts.length} fonts, ${audios.length} audios, ${js.length} js files, ${css.length} css files).`))\r\n                .catch((e) => reject(`[ResourceManager ERROR] ${e}`));\r\n        });\r\n    }\r\n\r\n    private loadResource({ type, key, src }: { type: ResourceList; key: string; src: string }): Promise<string> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const instance = this;\r\n\r\n            switch (type) {\r\n                case ResourceList.IMAGE: {\r\n                    const image = new Image();\r\n\r\n                    image.onload = function () {\r\n                        const imageResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: image\r\n                        });\r\n                        instance.images.push(imageResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`Image ${key} loaded.`)\r\n                    };\r\n\r\n                    image.onerror = function () {\r\n                        reject(`Impossible to load image ${key} (${src}).`)\r\n                    };\r\n\r\n                    image.src = src;\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.VIDEO: {\r\n                    const video = document.createElement(\"video\") as HTMLVideoElement;\r\n\r\n                    video.onloadeddata = function () {\r\n                        const videoResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: video\r\n                        });\r\n                        instance.videos.push(videoResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`Video ${key} loaded.`)\r\n                    };\r\n\r\n                    video.onerror = function () {\r\n                        reject(`Impossible to load video ${key} (${src}).`)\r\n                    };\r\n\r\n                    video.src = src;\r\n                    video.load();\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.FONT: {\r\n                    const fontFile = new FontFace(\r\n                        key,\r\n                        `url(${src})`,\r\n                    );\r\n                    document.fonts.add(fontFile);\r\n\r\n                    try {\r\n                        const fontLoad = await fontFile.load();\r\n\r\n                        const fontResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: fontLoad\r\n                        });\r\n                        instance.fonts.push(fontResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`Font ${key} loaded.`)\r\n                    }\r\n                    catch (e) {\r\n                        reject(`Impossible to load font ${key} (${src}).`)\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.AUDIO: {\r\n                    const audio = new Audio(src);\r\n\r\n                    audio.onloadeddata = function () {\r\n                        const audioResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: audio\r\n                        });\r\n                        instance.audios.push(audioResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`Audio ${key} loaded.`)\r\n                    };\r\n\r\n                    audio.onerror = function () {\r\n                        reject(`Impossible to load audio ${key} (${src}).`)\r\n                    };\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.DIVERSE: {\r\n                    try {\r\n                        let file: any = null;\r\n\r\n                        if (!this.isLocale(src))\r\n                            file = await fetchLocale(src);\r\n                        else\r\n                            file = await fetch(src);\r\n\r\n                        if (file == null || !file.ok) {\r\n                            reject(`Impossible to load diverse file ${key} (${src}).`)\r\n                            return;\r\n                        }\r\n\r\n                        const diverseResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: file\r\n                        });\r\n                        instance.diverses.push(diverseResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`Diverse file ${key} loaded.`)\r\n                    }\r\n                    catch (e) {\r\n                        reject(`Impossible to load diverse file ${key} (${src}).`)\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.JS: {\r\n                    const script = document.createElement(\"script\");\r\n\r\n                    script.onload = function () {\r\n                        const jsResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: script\r\n                        });\r\n                        instance.js.push(jsResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`JS ${key} loaded.`)\r\n                    };\r\n\r\n                    script.onerror = function () {\r\n                        reject(`Impossible to load js ${key} (${src}).`)\r\n                    };\r\n\r\n                    script.src = src;\r\n                    document.head.appendChild(script);\r\n                    break;\r\n                }\r\n\r\n                case ResourceList.CSS: {\r\n                    let link = document.createElement(\"link\");\r\n                    link.type = 'text/css';\r\n                    link.rel = 'stylesheet';\r\n\r\n                    link.onload = function () {\r\n                        const cssResource = new Resource({\r\n                            key: key.toUpperCase(),\r\n                            data: link\r\n                        });\r\n                        instance.css.push(cssResource);\r\n                        instance.emitProgress();\r\n\r\n                        resolve(`CSS ${key} loaded.`)\r\n                    };\r\n\r\n                    link.onerror = function () {\r\n                        reject(`Impossible to load css ${key} (${src}).`)\r\n                    };\r\n\r\n                    link.href = src;\r\n                    document.head.appendChild(link);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private isLocale(src: string): boolean {\r\n        if (src.startsWith(\"http://\") || src.startsWith(\"https://\"))\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    private countTotalResources(): number {\r\n        return this.images.length + this.videos.length + this.fonts.length + this.audios.length\r\n    }\r\n\r\n    private emitProgress(): void {\r\n        const loadedResources = this.countTotalResources();\r\n\r\n        this.dispatchEvent(new CustomEvent(\"progress\", {\r\n            detail: {\r\n                totalResources: this.totalResources,\r\n                loadedResources: loadedResources,\r\n                percentage: (loadedResources / this.totalResources) * 100\r\n            }\r\n        }));\r\n    }\r\n\r\n    public getImage(key: string): HTMLImageElement | null {\r\n        for (let i in this.images) {\r\n            const image = this.images[i];\r\n\r\n            if (image.key == key.toUpperCase())\r\n                return image.getData() as HTMLImageElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getVideo(key: string): HTMLVideoElement | null {\r\n        for (let i in this.videos) {\r\n            const video = this.videos[i];\r\n\r\n            if (video.key == key.toUpperCase())\r\n                return video.getData() as HTMLVideoElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getFont(key: string): FontFace | null {\r\n        for (let i in this.fonts) {\r\n            const font = this.fonts[i];\r\n\r\n            if (font.key == key.toUpperCase())\r\n                return font.getData() as FontFace;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getAudio(key: string): HTMLAudioElement | null {\r\n        for (let i in this.audios) {\r\n            const audio = this.audios[i];\r\n\r\n            if (audio.key == key.toUpperCase())\r\n                return audio.getData() as HTMLAudioElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getDiverse(key: string): any {\r\n        for (let i in this.diverses) {\r\n            const diverse = this.diverses[i];\r\n\r\n            if (diverse.key == key.toUpperCase())\r\n                return diverse.getData();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getCss(key: string): HTMLLinkElement | null {\r\n        for (let i in this.css) {\r\n            const cssFile = this.css[i];\r\n\r\n            if (cssFile.key == key.toUpperCase())\r\n                return cssFile.getData() as HTMLLinkElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getJs(key: string): HTMLScriptElement | null {\r\n        for (let i in this.js) {\r\n            const jsFile = this.js[i];\r\n\r\n            if (jsFile.key == key.toUpperCase())\r\n                return jsFile.getData() as HTMLScriptElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","import ResourceManager from \"./Resource/ResourceManager\";\r\nimport { ResourceType } from \"./Resource/Types/ResourceType\";\r\nimport { ResourceList } from \"./Resource/ResourceList\";\r\n\r\nexport default ResourceManager\r\nexport { ResourceList }\r\nexport type { ResourceType }"],"mappings":"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","names":["ResourceList"]}